<?xml version="1.0" encoding="UTF-8"?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms" 
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml" 
             xmlns:behaviors="clr-namespace:TechnicalFounders.Behaviors;assembly=TechnicalFounders"
             x:Class="TechnicalFounders.Views.SignUpPage"
             BackgroundColor="White">

    <ContentPage.Resources>

        <!-- If a Style does not have an x:Key, it is applied to all TargetType instances -->
        <Style TargetType="Entry">
            <Setter Property="VisualStateManager.VisualStateGroups">
                <VisualStateGroupList>
                    <VisualStateGroup x:Name="CommonStates">
                        
                        <VisualState x:Name="Normal"/>
                        
                        <VisualState x:Name="Focused">
                            <VisualState.Setters>
                                <Setter Property="BackgroundColor" Value="LightYellow"/>
                            </VisualState.Setters>
                        </VisualState>
                        
                        <VisualState x:Name="Disabled"/>
                        
                    </VisualStateGroup>

                    <VisualStateGroup x:Name="ValidationStates">
                        
                        <VisualState x:Name="Valid">
                            <VisualState.Setters>
                                <Setter Property="TextColor" Value="Green"/>
                            </VisualState.Setters>
                        </VisualState>

                        <VisualState x:Name="Invalid">
                            <VisualState.Setters>
                                <Setter Property="TextColor" Value="LightCoral"/>
                            </VisualState.Setters>
                        </VisualState>
                        
                    </VisualStateGroup>
                    
                </VisualStateGroupList>
            </Setter>
        </Style>

        <Style x:Key="ValidationMessageStyle" TargetType="Label">
            <Setter Property="FontSize" Value="Micro"/>
            <Setter Property="FontAttributes" Value="Italic"/>
            <Setter Property="VisualStateManager.VisualStateGroups">
                <VisualStateGroupList>
                    <VisualStateGroup x:Name="ValidationStates">

                        <VisualState x:Name="Normal">
                            <VisualState.Setters>
                                <Setter Property="IsVisible" Value="false"/>
                            </VisualState.Setters>
                        </VisualState>
                        
                        <VisualState x:Name="Valid">
                            <VisualState.Setters>
                                <Setter Property="IsVisible" Value="false"/>
                            </VisualState.Setters>
                        </VisualState>

                        <VisualState x:Name="Invalid">
                            <VisualState.Setters>
                                <Setter Property="IsVisible" Value="true"/>
                                <Setter Property="TextColor" Value="Red"/>
                            </VisualState.Setters>
                        </VisualState>
                        
                    </VisualStateGroup>
                </VisualStateGroupList>
            </Setter>
        </Style>

        <Style x:Key="PasswordStrengthStyle" BasedOn="{StaticResource ValidationMessageStyle}" TargetType="Label">
            <Setter Property="VisualStateManager.VisualStateGroups">
                <VisualStateGroupList>
                    <VisualStateGroup x:Name="StrengthStates">
                        
                        <VisualState x:Name="Invalid">
                            <VisualState.Setters>
                                <Setter Property="IsVisible" Value="true"/>
                                <Setter Property="TextColor" Value="Red"/>
                                <Setter Property="Text" Value="6 or more characters required."/>
                            </VisualState.Setters>
                        </VisualState>

                        <VisualState x:Name="Weak">
                            <VisualState.Setters>
                                <Setter Property="IsVisible" Value="true"/>
                                <Setter Property="TextColor" Value="Blue"/>
                                <Setter Property="Text" Value="Your password could be stronger."/>
                            </VisualState.Setters>
                        </VisualState>

                        <VisualState x:Name="Strong">
                            <VisualState.Setters>
                                <Setter Property="IsVisible" Value="true"/>
                                <Setter Property="TextColor" Value="Green"/>
                                <Setter Property="Text" Value="Your password is nice and strong!"/>
                            </VisualState.Setters>
                        </VisualState>
                        
                    </VisualStateGroup>
                </VisualStateGroupList>
            </Setter>
        </Style>
        
    </ContentPage.Resources>

    <ScrollView VerticalScrollBarVisibility="Never" HorizontalScrollBarVisibility="Never">

        <Grid Margin="20, 45, 20, 50" RowSpacing="0">
            
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition Height="60" />
                <RowDefinition Height="60" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="40" />
                <RowDefinition Height="40" />
                <RowDefinition Height="40" />
                <RowDefinition Height="40" />
                <RowDefinition Height="40" />
                <RowDefinition Height="40" />
                <RowDefinition Height="40" />
                <RowDefinition Height="40" />
                <RowDefinition Height="*" />
                <RowDefinition Height="50" />
            </Grid.RowDefinitions>

            <Label Text="Welcome to Technical Founders" FontAttributes="Italic" FontSize="Medium"
                   Margin="0, 0, 0, 20" VerticalTextAlignment="End"
                   Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="2" />

            <Button Text="X" FontAttributes="Bold" TextColor="DarkRed" FontSize="Large" Margin="0, 0, 0, 0"
                    BackgroundColor="White" HorizontalOptions="End" Command="{Binding GoBackCommand, Mode=TwoWay}"
                    Grid.Column="1" Grid.Row="0"/>

            <Label Text="Create your account" FontAttributes="Bold" FontSize="Large"
                   HeightRequest="90" Margin="0, 10, 0, 20" VerticalTextAlignment="Start"
                   Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="2" />

            <Label Text="User Name" FontSize="Small" FontAttributes="Bold"
                   VerticalTextAlignment="Center"
                   Grid.Column="0" Grid.Row="2" />

            <Label Text="All fields are mandatory" FontSize="Small" TextColor="Silver"
                   VerticalTextAlignment="Center"
                   Grid.Column="1" Grid.Row="2" />

            <Entry Placeholder="Enter a user name" x:Name="userNameEntry" TextChanged="UserName_TextChanged"
                   Text="{Binding UserName, Mode=OneWayToSource}"
                   Grid.Column="0" Grid.Row="3" Grid.ColumnSpan="2"/>
            <!--<Entry.Behaviors>
                    <behaviors:EntryValidationBehavior Command="{Binding EntryCommand}" />
                </Entry.Behaviors>
            </Entry>-->

            <Label x:Name="userNameValidationLabel" IsVisible="false" Text="You must enter a user name."
                   Style="{StaticResource ValidationMessageStyle}"
                   Grid.Column="0" Grid.Row="4" Grid.ColumnSpan="2"/>

            <Label Text="Email" FontSize="Small" FontAttributes="Bold"
                   VerticalTextAlignment="Center"
                   Grid.Column="0" Grid.Row="5" />

            <Entry Placeholder="Enter a valid email address" x:Name="emailEntry" TextChanged="Email_TextChanged"
                   Text="{Binding EmailAddress, Mode=OneWayToSource}"
                   Grid.Column="0" Grid.Row="6" Grid.ColumnSpan="2"/>

            <Label x:Name="emailValidationLabel" IsVisible="false" Text="Valid email address required."
                   Style="{StaticResource ValidationMessageStyle}"
                   Grid.Column="0" Grid.Row="7" Grid.ColumnSpan="2"/>

            <Label Text="Password" FontSize="Small" FontAttributes="Bold" 
                   VerticalTextAlignment="Center"
                   Grid.Column="0" Grid.Row="8" />

            <Label Text="Six or more characters" FontSize="Small" TextColor="Silver"
                   VerticalTextAlignment="Center"
                   Grid.Column="1" Grid.Row="8" />

            <Entry Placeholder="Enter a password" x:Name="passwordEntry" TextChanged="Password_TextChanged"
                   Text="{Binding Password, Mode=OneWayToSource}" IsPassword="true"
                   Grid.Column="0" Grid.Row="9" Grid.ColumnSpan="2"/>

            <Label x:Name="passwordValidationLabel" IsVisible="false" Text="Password must be 6 characters or more."
                   Style="{StaticResource PasswordStrengthStyle}"
                   Grid.Column="0" Grid.Row="10" Grid.ColumnSpan="2"/>

            <Button x:Name="createAccountButton" Text="Create Your Account" TextColor="White" 
                    BackgroundColor="Blue" FontAttributes="Bold" CornerRadius="10" FontSize="Medium"
                    Command="{Binding CreateAccountCommand, Mode=TwoWay}" CommandParameter="{Binding IsValid, Mode=OneWay}"
                    Grid.Column="0" Grid.Row="12" Grid.ColumnSpan="2"/>
        
        </Grid>
        
    </ScrollView>
    
</ContentPage>
